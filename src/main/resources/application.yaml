server:
  port: ${PORT:4099}

management:
  health:
    db:
      enabled: true
    defaults:
      enabled: true
    diskspace:
      enabled: true
  endpoint:
    health:
      enabled: true
      cache:
        time-to-live: 5s
      show-details: "always"
  security:
    enabled: false
  endpoints:
    health:
      sensitive: false
    web:
      base-path: /
      exposure:
        include: 'health'

#If you use a database then uncomment below lines and update db properties accordingly

spring:
  application:
    name: Role Assignment Batch Service
  main:
    allow-bean-definition-overriding: true
  jackson:
    default-property-inclusion: NON_NULL
  spring:
    cloud:
      discovery:
        enabled: false
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate:
        jdbc:
          batch_size: 10
          batch_versioned_data: true
        order_inserts: true
        order_updates: true
        lob:
          non_contextual_creation: true
  flyway.enabled: ${ENABLE_DB_MIGRATE:true}
  flyway.locations: classpath:db/migration
  datasource:
    url: jdbc:postgresql://${ROLE_ASSIGNMENT_DB_HOST:localhost}:${ROLE_ASSIGNMENT_DB_PORT:5451}/${ROLE_ASSIGNMENT_DB_NAME:role_assignment}${ROLE_ASSIGNMENT_DB_OPTIONS:?stringtype=unspecified&reWriteBatchedInserts=true}
    username: ${ROLE_ASSIGNMENT_DB_USERNAME:am}
    password: ${ROLE_ASSIGNMENT_DB_PASSWORD:am}
    auto-commit: true
    properties:
      charSet: UTFh-8
    hikari:
      maximumPoolSize: 10
      poolName: AMHikariCP
      maxLifetime: 90000
      connectionTimeout: 10000
      keepAliveTime: 60000
    batch:
      initialize-schema: always

delete-expired-records: deleteExpiredRecords
batchjob-name: deleteExpiredRecords
batch-size: 2