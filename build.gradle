buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }
    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:3.2.5")
        classpath 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.7.4'
    }
}

plugins {
    id 'application'
    id 'uk.gov.hmcts.java' version '0.12.24'
    id 'pmd'
    id 'jacoco'
    id 'org.springframework.boot' version '2.5.9'
    id 'info.solidsoft.pitest' version '1.7.4'
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id 'java'
    id 'com.github.ben-manes.versions' version '0.41.0'
    id 'org.sonarqube' version '3.4.0.2513'
}

apply plugin: "info.solidsoft.pitest"
apply plugin: 'java'
apply plugin: 'net.serenity-bdd.aggregator'
apply plugin: 'project-report'
apply plugin: 'idea'
apply plugin: 'io.spring.dependency-management'

def versions = [
        junit              : '5.8.2',
        lombok             : '1.18.22',
        gradlePitest       : '1.3.0',
        pitest             : '1.7.4',
        reformLogging      : '5.1.7',
        serenity           : '2.2.12',
        springBoot         : '2.6.6',
        spring             : '5.3.20',
        springSecurity     : '5.7.1',
        sonarPitest        : '0.5',
        rest_assured       : '3.3.0',
        feign_jackson      : '9.7.0',
        log4JVersion       : '2.17.1',
        logbackVersion     : '1.2.10'
]

mainClassName = 'uk.gov.hmcts.reform.roleassignmentbatch.RoleAssignmentBatchApplication'
def jarName = 'am-role-assignment-batch-service.jar'

pmd {
    toolVersion = '6.21.0'
    sourceSets = []
}

group = 'uk.gov.hmcts.reform.roleassignmentbatch'
version = '0.0.1'

tasks.withType(JavaExec).configureEach {
    javaLauncher.set(javaToolchains.launcherFor(java.toolchain))
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.0
            }
        }
    }
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integrationTest/java')
        }
        resources.srcDir file('src/integrationTest/resources')
    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:unchecked" << "-Werror"
}

task integration(type: Test, description: 'Runs the integration tests.', group: 'Verification') {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    mustRunAfter test
    finalizedBy aggregate
}
check.dependsOn integration

task fortifyScan(type: JavaExec)  {
    main("uk.gov.hmcts.fortifyclient.FortifyClientMainApp")
    classpath += sourceSets.test.runtimeClasspath
    jvmArgs = ['--add-opens=java.base/java.lang.reflect=ALL-UNNAMED']
    // The line below prevents the build from failing if the Fortify scan detects issues
    ignoreExitValue = true as JavaExecSpec
}

jacocoTestReport {
    executionData(test)
    reports {
        xml.required = true
        csv.required = false
        xml.outputLocation = file("${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml")
    }
}

project.tasks['sonarqube'].dependsOn test, integration, jacocoTestReport

jacoco {
    toolVersion = "0.8.7"
}

pitest {
    pitestVersion = "1.5.2"
    testPlugin = "junit5"
    targetClasses = ['uk.gov.hmcts.reform.*']
    excludedClasses = ['uk.gov.hmcts.reform.roleassignmentbatch.RoleAssignmentBatchApplication',
                       'uk.gov.hmcts.reform.roleassignmentbatch.config.*',
                        'uk.gov.hmcts.reform.roleassignmentbatch.util.*']
    threads = 15
    outputFormats = ['XML', 'HTML']
    timestampedReports = true
    mutationThreshold = 60
}

sonarqube {
    properties {
        property "sonar.projectName", "am-role-assignment-batch-service"
        property "sonar.projectKey", "am-role-assignment-batch-service"
        property "sonar.coverage.jacoco.xmlReportPaths", "${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml"
        property "sonar.exclusions", "**/RoleAssignmentBatchApplication.java,"+ "**/roleassignmentbatch/**.java,"+ "**/util/**.java,"+"**/RenameTablesPostMigration.java,"+"**/ReplicateTablesTasklet.java"
        property "sonar.pitest.mode", "reuseReport"
        property "sonar.pitest.reportsDirectory", "build/reports/pitest"
    }
}

project.tasks['sonarqube'].dependsOn test, integration, jacocoTestReport
project.tasks['sonarqube'].group = "Verification"

dependencyUpdates.resolutionStrategy {
    componentSelection { rules ->
        rules.all {
            def isNonStable = { String version ->
                ['alpha', 'beta', 'rc', 'cr', 'm', 'preview', 'b', 'ea'].any { qualifier ->
                    version ==~ /(?i).*[.-]\$qualifier[.\\d-+]*/
                }
            }
            if (isNonStable(candidate.version) && !isNonStable(currentVersion)) {
                selection.reject('Release candidate')
            }
        }
    }
}

//https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
    suppressionFile = 'config/owasp/suppressions.xml'
}

dependencyUpdates.resolutionStrategy = {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}

repositories {
    mavenLocal()
    gradlePluginPortal()
    mavenCentral()
    maven {
        url 'https://jitpack.io'
    }
}


dependencies {
    implementation (group: 'org.springframework.boot', name: 'spring-boot-starter-batch')
    implementation(group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: versions.springBoot)
    implementation(group: 'org.springframework', name: 'spring-jdbc')
    implementation group: 'org.springframework', name: 'spring-core', version: versions.spring
    implementation (group: 'org.springframework.security', name: 'spring-security-core', version: versions.springSecurity) {
        exclude group: 'org.springframework.security', module: 'spring-security-crypto'
    }

    //Sendgrid
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-mail', version: versions.springBoot
    implementation group: 'org.thymeleaf', name: 'thymeleaf', version: '3.0.15.RELEASE'
    implementation group: 'org.thymeleaf', name: 'thymeleaf-spring5', version: '3.0.15.RELEASE'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: versions.springBoot
    implementation 'com.sendgrid:sendgrid-java:4.9.3'

    //Fix CVE
    implementation group: 'org.springframework', name: 'spring-aop', version: versions.spring
    implementation group: 'org.springframework', name: 'spring-aspects', version: versions.spring
    implementation group: 'org.springframework', name: 'spring-beans', version: versions.spring
    implementation group: 'org.springframework', name: 'spring-context', version: versions.spring
    implementation group: 'org.springframework', name: 'spring-context-support', version: versions.spring
    implementation group: 'org.springframework', name: 'spring-expression', version: versions.spring
    implementation group: 'org.springframework', name: 'spring-jcl', version: versions.spring
    implementation group: 'org.springframework', name: 'spring-jdbc', version: versions.spring
    implementation group: 'org.springframework', name: 'spring-orm', version: versions.spring
    implementation group: 'org.springframework', name: 'spring-tx', version: versions.spring
    implementation group: 'org.springframework', name: 'spring-web', version: versions.spring
    implementation group: 'org.springframework', name: 'spring-webmvc', version: versions.spring


    implementation 'commons-io:commons-io:20030203.000550'
    implementation group: 'javax.validation', name: 'validation-api'
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.13.3'
    implementation group: 'com.fasterxml.jackson', name: 'jackson-bom', version: '2.13.2.20220328', ext: 'pom'

    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'
    implementation group: 'javax.inject', name: 'javax.inject', version: '1'
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.5.0'
    implementation group: 'com.github.hmcts.java-logging', name: 'logging', version: versions.reformLogging
    implementation group: 'com.launchdarkly', name: 'launchdarkly-java-server-sdk' , version: '5.10.0'
    implementation group: 'com.google.guava', name: 'guava', version: '31.1-jre'
    implementation group: 'org.flywaydb', name: 'flyway-core', version: '9.2.1'
    implementation group: 'javax.persistence', name: 'javax.persistence-api', version: '2.2'
    implementation group: 'org.apache.tomcat.embed', name: 'tomcat-embed-core', version: '10.0.23'
    implementation group: 'org.apache.tomcat.embed', name: 'tomcat-embed-websocket', version: '10.0.23'

    testImplementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.0'
    testImplementation group: 'org.springframework.batch', name: 'spring-batch-test'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.junit
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: versions.junit
    testImplementation group: 'org.junit.platform', name: 'junit-platform-commons', version: '1.9.0'
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: versions.junit
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: versions.springBoot

    pitest 'org.pitest:pitest-junit5-plugin:0.16'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.junit
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: versions.junit
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: versions.junit

    testImplementation group: 'org.pitest', name: 'pitest', version: versions.pitest
    testImplementation 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.7.4'
    testImplementation 'org.codehaus.sonar-plugins:sonar-pitest-plugin:0.5'
    testImplementation 'com.github.hmcts:fortify-client:1.2.0:all'
    testImplementation group: 'io.rest-assured', name: 'rest-assured', version: versions.rest_assured
    testImplementation group: 'io.github.openfeign', name: 'feign-jackson', version: versions.feign_jackson
    testImplementation('com.opentable.components:otj-pg-embedded:1.0.1')

    compileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    integrationTestImplementation group: 'net.serenity-bdd', name: 'serenity-core', version: versions.serenity
    integrationTestImplementation group: 'net.serenity-bdd', name: 'serenity-junit', version: versions.serenity
    integrationTestImplementation group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenity
    integrationTestImplementation group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity

    integrationTestImplementation sourceSets.main.runtimeClasspath
    integrationTestImplementation sourceSets.test.runtimeClasspath

}

dependencyManagement {
    dependencies {
        dependencySet(group: 'org.apache.logging.log4j', version: versions.log4JVersion) {
            entry 'log4j-api'
            entry 'log4j-to-slf4j'
        }
        dependencySet(group: 'ch.qos.logback', version: versions.logbackVersion) {
            entry 'logback-classic'
            entry 'logback-core'
        }
        dependencySet(group: 'com.fasterxml.jackson.core', version: '2.13.2') {
            entry 'jackson-databind'
            entry 'jackson-core'
            entry 'jackson-annotations'
        }
    }
}

test {
    useJUnitPlatform()
    failFast = true
}


bootJar {
    archiveFileName = jarName

    manifest {
        attributes('Implementation-Version': project.version.toString())
    }
}

// Gradle 7.x issue, workaround from: https://github.com/gradle/gradle/issues/17236#issuecomment-894768083
rootProject.tasks.named("processIntegrationTestResources") {
    duplicatesStrategy = 'include'
}
